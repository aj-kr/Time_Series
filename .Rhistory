align = "v",ncol = 1)
# Capping outliers in YearsSinceLastPromotion
emp_attrition$YearsSinceLastPromotion <- cap_outliers(emp_attrition$YearsSinceLastPromotion)
# There are three outliers in YearsWithCurrManager
plot_grid(ggplot(emp_attrition, aes(YearsWithCurrManager))+ geom_histogram(binwidth = 1),
ggplot(emp_attrition, aes(x="",y=YearsWithCurrManager))+ geom_boxplot(width=0.1)+coord_flip()+box_theme,
align = "v",ncol = 1)
# Capping outliers in YearsWithCurrManager
emp_attrition$YearsWithCurrManager <- cap_outliers(emp_attrition$YearsWithCurrManager)
# There are a few outliers in MeanHoursInOffice
plot_grid(ggplot(emp_attrition, aes(MeanHoursInOffice))+ geom_histogram(binwidth = 1),
ggplot(emp_attrition, aes(x="",y=MeanHoursInOffice))+ geom_boxplot(width=0.1)+coord_flip()+box_theme,
align = "v",ncol = 1)
# Capping outliers in MeanHoursInOffice
emp_attrition$MeanHoursInOffice <- cap_outliers(emp_attrition$MeanHoursInOffice)
# Box plots of numeric variables
# Boxplots of numeric variables relative to Attrition
# This shows young employees attrition more than old employees
plot_grid(ggplot(emp_attrition, aes(x=Attrition,y=Age, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() +theme(legend.position="none"),
ggplot(emp_attrition, aes(x=Attrition,y=DistanceFromHome, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
ggplot(emp_attrition, aes(x=Attrition,y=MonthlyIncome, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
align = "v",nrow = 1)
# Employees who have worked in more companies and who have less experience are
# more prone to attrition
plot_grid(ggplot(emp_attrition, aes(x=Attrition,y=NumCompaniesWorked, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() +theme(legend.position="none"),
ggplot(emp_attrition, aes(x=Attrition,y=PercentSalaryHike, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
ggplot(emp_attrition, aes(x=Attrition,y=TotalWorkingYears, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
align = "v",nrow = 1)
# Employees who spend more years at company are less likely to quit.
plot_grid(ggplot(emp_attrition, aes(x=Attrition,y=TrainingTimesLastYear, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() +theme(legend.position="none"),
ggplot(emp_attrition, aes(x=Attrition,y=YearsAtCompany, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
ggplot(emp_attrition, aes(x=Attrition,y=YearsSinceLastPromotion, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
align = "v",nrow = 1)
# Employees who have spent longer with their current manager are less likely to quit while
# Employees who spent longer hours in office are more likely to quit
plot_grid(ggplot(emp_attrition, aes(x=Attrition,y=YearsWithCurrManager, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() +theme(legend.position="none"),
ggplot(emp_attrition, aes(x=Attrition,y=MeanHoursInOffice, fill=Attrition))+ geom_boxplot(width=0.2)+
coord_flip() + box_theme_y,
align = "v",nrow = 1)
# Correlation between numeric variables
continuous_features <- c("Age", "DistanceFromHome", "MonthlyIncome", "NumCompaniesWorked", "PercentSalaryHike",
"TotalWorkingYears", "TrainingTimesLastYear", "YearsAtCompany",
"YearsSinceLastPromotion", "YearsWithCurrManager", "MeanHoursInOffice")
ggpairs(emp_attrition[, continuous_features])
# Below variables seem to have strong correlation
# Age & TotalWorkingYears
# YearsAtCompany & TotalWorkingYears - indicates Employees leave company less often
# YearsAtCompany & YearsWithCurrManager - indicates Employees stick to one manager more often
# YearsSinceLastPromotion & YearsWithCurrManager
#
# Function to scale numeric variables
scale_continuous <- function(df, cols) {
for(col in cols) {
df[ ,col] <- scale(df[ ,col])
}
return (df)
}
# Scale continuous variables
emp_attrition <- scale_continuous(emp_attrition, continuous_features)
categorical_features <- c("BusinessTravel", "Department", "Education", "EducationField", "Gender",
"JobLevel", "JobRole", "MaritalStatus", "StockOptionLevel", "EnvironmentSatisfaction",
"JobSatisfaction", "WorkLifeBalance", "JobInvolvement", "PerformanceRating")
# Creating a data frame of categorical features
emp_attrition_categorical <- emp_attrition[ ,categorical_features]
# converting categorical attributes to factor
emp_attrition_fact<- data.frame(sapply(emp_attrition_categorical, function(x) factor(x)))
str(emp_attrition_fact)
# creating dummy variables for factor attributes
dummies<- data.frame(sapply(emp_attrition_fact,
function(x) data.frame(model.matrix(~x-1,data =emp_attrition_fact))[,-1]))
# For variables having only two levels, verified gender "male" is 1
# Final dataset for model building
emp_attrition <- cbind(emp_attrition[ ,c("Attrition",continuous_features)], dummies)
# converting target variable Attrition from No/Yes character to factorwith levels 0/1
emp_attrition$Attrition<- ifelse(emp_attrition$Attrition=="Yes",1,0)
# Checking attrition rate of Employees
Attrition <- sum(emp_attrition$Attrition)/nrow(emp_attrition)
Attrition # 16.16% attrition rate.
########################################################################
# splitting the data between train and test
set.seed(100)
indices = sample.split(emp_attrition$Attrition, SplitRatio = 0.7)
train = emp_attrition[indices,]
test = emp_attrition[!(indices),]
########################################################################
# Logistic Regression: Model Building
#Initial model
model_1 = glm(Attrition ~ ., data = train, family = "binomial")
summary(model_1)
# Stepwise selection
model_2<- stepAIC(model_1, direction="both")
summary(model_2)
# Dropping  JobLevel.x2 since its least significant
model_3 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
Education.x5 + EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobLevel.x2 + JobRole.xLaboratory.Technician +
JobRole.xManufacturing.Director + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + StockOptionLevel.x1 + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4 +
JobInvolvement.x3, family = "binomial", data = train)
summary(model_3)
# Dropping  Education.x5 since its least significant
model_4 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobLevel.x2 + JobRole.xLaboratory.Technician +
JobRole.xManufacturing.Director + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + StockOptionLevel.x1 + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4 +
JobInvolvement.x3, family = "binomial", data = train)
summary(model_4)
# Dropping JobRole.xManufacturing.Director since it's least significant
model_5 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobLevel.x2 + JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + StockOptionLevel.x1 + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4 +
JobInvolvement.x3, family = "binomial", data = train)
summary(model_5)
# Dropping JobLevel.x2 since it's least significant
model_6 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + StockOptionLevel.x1 + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4 +
JobInvolvement.x3, family = "binomial", data = train)
summary(model_6)
# Dropping JobInvolvement.x3 since it's least significant
model_7 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + StockOptionLevel.x1 + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_7)
# Dropping StockOptionLevel.x1 since it's least significant
model_8 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
TrainingTimesLastYear + YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_8)
# Dropping TrainingTimesLastYear since it's least significant
model_9 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + BusinessTravel.xTravel_Rarely +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_9)
# Dropping BusinessTravel.xTravel_Rarely since it's least significant
model_10 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xLaboratory.Technician + JobRole.xResearch.Director +
JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_10)
# Dropping JobRole.xLaboratory.Technician since it's least significant
model_11 <- glm(formula = Attrition ~ Age + NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xResearch.Director + JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_11)
# Dropping Age since it's least significant
model_12 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xResearch.Director + JobRole.xResearch.Scientist + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_12)
# Dropping JobRole.xResearch.Scientist since it's least significant
model_13 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xResearch.Director + JobRole.xSales.Executive +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_13)
# Dropping JobRole.xResearch.Director since it's least significant
model_14 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
JobRole.xSales.Executive + MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_14)
# Dropping JobRole.xSales.Executive since it's least significant
model_15 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xLife.Sciences + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_15)
# Every variable is significant now. Let's check VIF now
sort(vif(model_15))
# Since both EducationField Medical & Life Sciences look highly correlated
# dropping EducationField.xLife.Sciences
model_16 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently + EducationField.xMarketing +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_16)
# Dropping EducationField.xMarketing since it's least significant
model_17 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xMedical + EducationField.xOther + EducationField.xTechnical.Degree +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_17)
# Dropping EducationField.xMedical since it's least significant
model_18 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xOther + EducationField.xTechnical.Degree +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_18)
# Dropping EducationField.xOther since it's least significant
model_19 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
EducationField.xTechnical.Degree +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_19)
# Dropping EducationField.xTechnical.Degree since it's least significant
model_20 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x3 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_20)
# Since all variables are significant now. Need to check VIF
sort(vif(model_20))
# Dropping WorkLifeBalance.x3 as it has high VIF
model_21 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2 + WorkLifeBalance.x4,
family = "binomial", data = train)
summary(model_21)
# Dropping WorkLifeBalance.x4 as it is least significant
model_22 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 +
WorkLifeBalance.x2,
family = "binomial", data = train)
summary(model_22)
# Dropping WorkLifeBalance.x2 as it is least significant
model_23 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x3 + JobSatisfaction.x4 ,
family = "binomial", data = train)
summary(model_23)
# Since all variables are significant now. Need to check VIF
sort(vif(model_23))
# Dropping JobSatisfaction.x3 as it has high VIF
model_24 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 +
JobSatisfaction.x2 + JobSatisfaction.x4 ,
family = "binomial", data = train)
summary(model_24)
# Dropping JobSatisfaction.x2 as it's least significant
model_25 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x3 + EnvironmentSatisfaction.x4 + JobSatisfaction.x4,
family = "binomial", data = train)
summary(model_25)
# We still have 11 variables. Need to drop more. Checking VIF ...
sort(vif(model_25))
# Dropping EnvironmentSatisfaction.x3 due to high VIF
model_26 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x2 +
EnvironmentSatisfaction.x4 + JobSatisfaction.x4,
family = "binomial", data = train)
summary(model_26)
# Dropping EnvironmentSatisfaction.x2 due to low significance
model_27 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + YearsWithCurrManager +
MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x4 + JobSatisfaction.x4,
family = "binomial", data = train)
summary(model_27)
# Checking VIF again.
sort(vif(model_27))
# Dropping YearsWithCurrManager due to high correlation with YearsSinceLastPromotion
# as seen in correlation matrix
model_28 <- glm(formula = Attrition ~ NumCompaniesWorked + TotalWorkingYears +
YearsSinceLastPromotion + MeanHoursInOffice + BusinessTravel.xTravel_Frequently +
MaritalStatus.xSingle + EnvironmentSatisfaction.x4 + JobSatisfaction.x4,
family = "binomial", data = train)
summary(model_28)
# Checking VIF again.
sort(vif(model_28))
# Now no. of variables is less than 10 and VIF too is low for all variables
# We declare this as our final model.
final_model<- model_28
#######################################################################
### Model Evaluation
### Test Data ####
#predicted probabilities of Attrition 1 for test data
test_pred = predict(final_model, type = "response", newdata = test[,-1])
# Let's see the summary
summary(test_pred)
test$prob <- test_pred
View(test)
# Let's use the probability cutoff of 50%.
test_pred_attrition <- factor(ifelse(test_pred >= 0.50, "Yes", "No"))
test_actual_attrition <- factor(ifelse(test$Attrition==1,"Yes","No"))
test_conf <- confusionMatrix(test_pred_attrition, test_actual_attrition, positive = "Yes")
test_conf
#######################################################################
test_pred_attrition <- factor(ifelse(test_pred >= 0.40, "Yes", "No"))
test_conf <- confusionMatrix(test_pred_attrition, test_actual_attrition, positive = "Yes")
test_conf
#######################################################################
#########################################################################################
# Let's Choose the cutoff value.
#
# Let's find out the optimal probalility cutoff
perform_fn <- function(cutoff) {
predicted_attrition <- factor(ifelse(test_pred >= cutoff, "Yes", "No"))
conf <- confusionMatrix(predicted_attrition, test_actual_attrition, positive = "Yes")
acc <- conf$overall[1]
sens <- conf$byClass[1]
spec <- conf$byClass[2]
out <- t(as.matrix(c(sens, spec, acc)))
colnames(out) <- c("sensitivity", "specificity", "accuracy")
return(out)
}
# Creating cutoff values from 0.01 to 0.80 for plotting and initiallizing a matrix of 100 X 3.
# Summary of test probability
summary(test_pred)
s <- seq(.01,.80,length=100)
OUT <- matrix(0,100,3)
for(i in 1:100) {
OUT[i,] <- perform_fn(s[i])
}
# Drawing plots for Sensitivity, Specificity and Accuracy
plot(s, OUT[,1],xlab="Cutoff",ylab="Value",cex.lab=1.5,cex.axis=1.5,ylim=c(0,1),type="l",lwd=2,axes=FALSE,col=2)
axis(1,seq(0,1,length=5),seq(0,1,length=5),cex.lab=1.5)
axis(2,seq(0,1,length=5),seq(0,1,length=5),cex.lab=1.5)
lines(s,OUT[,2],col="darkgreen",lwd=2)
lines(s,OUT[,3],col=4,lwd=2)
box()
legend(0,.50,col=c(2,"darkgreen",4,"darkred"),lwd=c(2,2,2,2),c("Sensitivity","Specificity","Accuracy"))
# cutoff = 0.1696
cutoff <- s[which(abs(OUT[,1]-OUT[,2])<0.01)]
# Let's choose a cutoff value of 0.1696 for final model
test_cutoff_attrition <- factor(ifelse(test_pred >=0.1696, "Yes", "No"))
conf_final <- confusionMatrix(test_cutoff_attrition, test_actual_attrition, positive = "Yes")
acc <- conf_final$overall[1]
sens <- conf_final$byClass[1]
spec <- conf_final$byClass[2]
acc
sens
spec
setwd("~/PGDDS/Predictive Analysis-II/Time Series Case Study/Retail-Giant Sales Forecasting")
###########----------START OF CODE --------######################
###########Load CSV in data frame--------------Step 1--------#################
gs <- read.csv("global superstore.csv", header = T, sep = ',')
str(gs)
# Checking missing value
sapply(gs, function(x) sum(is.na(x))) # missing value in only postal code column
################Load required packages
library(conflicted)
library(tidyr)
library(dplyr)
library(lubridate)
library(forecast)
library(tseries)
require(graphics)
library(stats)
install.packages("conflicted")
install.packages("forecast")
install.packages("tseries")
library(conflicted)
library(tidyr)
library(dplyr)
library(lubridate)
library(forecast)
library(tseries)
require(graphics)
library(stats)
gs$Order.Date<- as.POSIXlt(gs$Order.Date,format="%d-%m-%Y")
gs$Order.Date <- format(as.Date(gs$Order.Date),"%Y-%m")
class(gs$Order.Date)
sapply(gs, function(x) sum(is.na(x))) # missing value in only postal code column
gs_grp <- group_by(gs,Order.Date,Segment,Market)
gs_sum <- summarise(gs_grp, sum_Sales = (sum(Sales)),sum_Quantity = (sum(Quantity)),sum_Profit = (sum(Profit)))
gs_sum$sales_profit_ratio <- gs_sum$sum_Profit/gs_sum$sum_Sales
gs_sum_grp <- group_by(gs_sum, Segment, Market)
